#!/bin/bash
set -eu

function parse_revision() {
  perl -pe 's/^r?(\d+)$/\1/' <<< "$1"
}

function rev_hash() {
  # Allow revisions with and without the r* prefix.
  revision=$(perl -pe 's/^r?(\d+)$/r\1/' <<< "$1")
  git svn find-rev $revision origin/master
}

if [[ "$1" == *":"* ]]; then
  first="${1%%:*}"
  last="${1#*:}"
else
  first="$1"
  last="$1"
fi

# Normalize into numbers (remove the r prefix if present)
first="$(parse_revision "$first")"
last="$(parse_revision "$last")"

# Sometimes revisions skip numbers, so we need to skip the ones not existing
while [ "x$(git svn find-rev r"$first")" == "x" ]; do
  first=$(($first + 1))
  if [ "$first" -gt "$last" ]; then
    echo "The range does not contain actual revisions."
    exit 1
  fi
done

while [ "x$(git svn find-rev r"$last")" == "x" ]; do
  last=$(($last - 1))
done

range="$(rev_hash $first)~..$(rev_hash $last)"
git log -p "$range"
